{"version":3,"sources":["../src/constants.js"],"names":[],"mappings":";;;;;;;;AAAO,IAAM,wCAAgB;AACzB,WAAO,CADkB;AAEzB,aAAS,CAFgB;AAGzB,WAAO,CAHkB;AAIzB,eAAW,CAJc;AAKzB,kBAAc,CALW;AAMzB,aAAS,CANgB;AAOzB,WAAO,CAPkB;AAQzB,aAAS,EARgB;AASzB,eAAW,EATc;AAUzB,eAAW,EAVc;AAWzB,gBAAY,EAXa;AAYzB,iBAAa,EAZY;AAazB,kBAAc,EAbW;AAczB,WAAO,EAdkB;AAezB,UAAM,EAfmB;AAgBzB,YAAQ,EAhBiB;AAiBzB,YAAQ,EAjBiB;AAkBzB,cAAU,EAlBe;AAmBzB,gBAAY,EAnBa;AAoBzB,gBAAY,EApBa;AAqBzB,kBAAc,EArBW;AAsBzB,gBAAY,EAtBa;AAuBzB,eAAW,EAvBc;AAwBzB,WAAO;AAxBkB,CAAtB;;AA2BA,IAAM,0CAAiB;AAC1B,aAAS;AACL,cAAM,CADD;AAEL,qBAAa;AAFR,KADiB;AAK1B,eAAW;AACP,cAAM,CADC;AAEP,qBAAa;AAFN,KALe;AAS1B,eAAW;AACP,cAAM,CADC;AAEP,qBAAa;AAFN,KATe;AAa1B,sBAAkB;AACd,cAAM,CADQ;AAEd,qBAAa;AAFC,KAbQ;AAiB1B,mBAAe;AACX,cAAM,CADK;AAEX,qBAAa;AAFF,KAjBW;AAqB1B,6BAAyB;AACrB,cAAM,CADe;AAErB,qBAAa;AAFQ,KArBC;AAyB1B,6BAAyB;AACrB,cAAM,CADe;AAErB,qBAAa;AAFQ,KAzBC;AA6B1B,2BAAuB;AACnB,cAAM,CADa;AAEnB,qBAAa;AAFM,KA7BG;AAiC1B,eAAW;AACP,cAAM,EADC;AAEP,qBAAa;AAFN,KAjCe;AAqC1B,4BAAwB;AACpB,cAAM,EADc;AAEpB,qBAAa;AAFO,KArCE;AAyC1B,yBAAqB;AACjB,cAAM,EADW;AAEjB,qBAAa;AAFI,KAzCK;AA6C1B,8BAA0B;AACtB,cAAM,EADgB;AAEtB,qBAAa;AAFS,KA7CA;AAiD1B,0BAAsB;AAClB,cAAM,EADY;AAElB,qBAAa;AAFK,KAjDI;AAqD1B,cAAU;AACN,cAAM,EADA;AAEN,qBAAa;AAFP,KArDgB;AAyD1B,kBAAc;AACV,cAAM,EADI;AAEV,qBAAa;AAFH,KAzDY;AA6D1B,qBAAiB;AACb,cAAM,EADO;AAEb,qBAAa;AAFA,KA7DS;AAiE1B,mBAAe;AACX,cAAM,EADK;AAEX,qBAAa;AAFF;AAjEW,CAAvB;;AAuEA,IAAM,sDAAuB,CAAC,MAAD,EAAS,aAAT,CAA7B;;AAEA,IAAM,0BAAU,QAAO,OAAP,yCAAO,OAAP,OAAmB,QAAnB,IAA+B,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,OAA/B,MAA4C,kBAA3F","file":"constants.js","sourcesContent":["export const WAMP_MSG_SPEC = {\n    HELLO: 1,\n    WELCOME: 2,\n    ABORT: 3,\n    CHALLENGE: 4,\n    AUTHENTICATE: 5,\n    GOODBYE: 6,\n    ERROR: 8,\n    PUBLISH: 16,\n    PUBLISHED: 17,\n    SUBSCRIBE: 32,\n    SUBSCRIBED: 33,\n    UNSUBSCRIBE: 34,\n    UNSUBSCRIBED: 35,\n    EVENT: 36,\n    CALL: 48,\n    CANCEL: 49,\n    RESULT: 50,\n    REGISTER: 64,\n    REGISTERED: 65,\n    UNREGISTER: 66,\n    UNREGISTERED: 67,\n    INVOCATION: 68,\n    INTERRUPT: 69,\n    YIELD: 70\n};\n\nexport const WAMP_ERROR_MSG = {\n    SUCCESS: {\n        code: 0,\n        description: 'Success!'\n    },\n    URI_ERROR: {\n        code: 1,\n        description: 'Topic URI doesn\\'t meet requirements!'\n    },\n    NO_BROKER: {\n        code: 2,\n        description: 'Server doesn\\'t provide broker role!'\n    },\n    NO_CALLBACK_SPEC: {\n        code: 3,\n        description: 'No required callback function specified!'\n    },\n    INVALID_PARAM: {\n        code: 4,\n        description: 'Invalid parameter(s) specified!'\n    },\n    INVALID_SERIALIZER_TYPE: {\n        code: 5,\n        description: 'Serializer with unsupported type provided!'\n    },\n    NO_SERIALIZER_AVAILABLE: {\n        code: 6,\n        description: 'Server has chosen a serializer, which is not available!'\n    },\n    NON_EXIST_UNSUBSCRIBE: {\n        code: 7,\n        description: 'Trying to unsubscribe from non existent subscription!'\n    },\n    NO_DEALER: {\n        code: 12,\n        description: 'Server doesn\\'t provide dealer role!'\n    },\n    RPC_ALREADY_REGISTERED: {\n        code: 15,\n        description: 'RPC already registered!'\n    },\n    NON_EXIST_RPC_UNREG: {\n        code: 17,\n        description: 'Received rpc unregistration for non existent rpc!'\n    },\n    NON_EXIST_RPC_INVOCATION: {\n        code: 19,\n        description: 'Received invocation for non existent rpc!'\n    },\n    NON_EXIST_RPC_REQ_ID: {\n        code: 20,\n        description: 'No RPC calls in action with specified request ID!'\n    },\n    NO_REALM: {\n        code: 21,\n        description: 'No realm specified!'\n    },\n    NO_WS_OR_URL: {\n        code: 22,\n        description: 'No websocket provided or URL specified is incorrect!'\n    },\n    NO_CRA_CB_OR_ID: {\n        code: 23,\n        description: 'No onChallenge callback or authid was provided for authentication!'\n    },\n    CRA_EXCEPTION: {\n        code: 24,\n        description: 'Exception raised during CRA challenge processing'\n    }\n};\n\nexport const ALLOWED_BINARY_TYPES = ['blob', 'arraybuffer'];\n\nexport const isNode = (typeof process === 'object' && Object.prototype.toString.call(process) === '[object process]');\n"]}